from abc import ABC, abstractmethod
from dataclasses import dataclass


@dataclass(kw_only=True)
class AbstractFeaturesVulnerabilityVariables(ABC):
    @property
    @abstractmethod
    def ssp_scenarios(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def aging_scenarios(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def rcdd_regions(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def outcomes(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def daymet(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def census_age(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def census_socioeco(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def ndvi(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def canue(self) -> list[str]:
        raise NotImplementedError

    @property
    @abstractmethod
    def age_agg_dict(self) -> list[str]:
        raise NotImplementedError


class Features_Vulnerability_Deaths_Variables_F1(AbstractFeaturesVulnerabilityVariables):
    ssp_scenarios = ['historical', 'ssp126', 'ssp245', 'ssp585']
    aging_scenarios = ['historical', 'younger_aging_scenarios', 'intermediate_aging_scenario', 'older_aging_scenario']
    rcdd_regions = ['below_96', '96_197', 'above_197']
    outcomes = ['dx_tot_deaths']
    daymet = ['daymet_tmin', 'daymet_tmax', 'daymet_tavg']
    census_age = ['census_Age_Tot_tot', 'census_Age_Tot_65_69', 'census_Age_Tot_70_74',
                  'census_Age_Tot_75_79', 'census_Age_Tot_80_84', 'census_Age_Tot_85_over']
    census_socioeco = ['census_Pop_Tot', 'census_Household_Tot', 'census_Pop_No_degree', 'census_Pop_Lico_at',
                       'census_Pop_Not_in_labour', 'census_Pop_Unemployed', 'census_Pop_No_official_language',
                       'census_Pop_Recent_immigrant', 'census_Pop_Aboriginal', 'census_Household_One_person',
                       'census_Household_Renter', 'census_Household_More_30_shelter_cost']
    ndvi = ['ndvi_built', 'ndvi_sparse_vegetation', 'ndvi_dense_vegetation', 'ndvi_superficie_tot']
    canue = ['canue_pm25', 'canue_no2', 'canue_o3']
    age_agg_dict = {'census_Age_Tot_65_over': ['census_Age_Tot_65_69', 'census_Age_Tot_70_74',
                                               'census_Age_Tot_75_79', 'census_Age_Tot_80_84',
                                               'census_Age_Tot_85_over'],
                    'census_Age_Tot_75_over': ['census_Age_Tot_75_79', 'census_Age_Tot_80_84',
                                               'census_Age_Tot_85_over'],
                    'census_Age_Tot_65_74': ['census_Age_Tot_65_69', 'census_Age_Tot_70_74']}
